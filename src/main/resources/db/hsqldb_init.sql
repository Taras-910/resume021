DROP TABLE rate IF EXISTS;
DROP TABLE vote IF EXISTS;
DROP TABLE user_roles IF EXISTS;
DROP TABLE resume IF EXISTS;
DROP TABLE freshen_goal IF EXISTS;
DROP TABLE freshen IF EXISTS;
DROP TABLE users IF EXISTS;
DROP SEQUENCE GLOBAL_SEQ IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 100000;

CREATE TABLE users
(
    id INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name          VARCHAR(255)            NOT NULL,
    email         VARCHAR(255)            NOT NULL,
    password      VARCHAR(255)            NOT NULL,
    registered    TIMESTAMP DEFAULT now() NOT NULL,
    enabled       BOOLEAN   DEFAULT TRUE  NOT NULL
);
CREATE UNIQUE INDEX users_unique_email_idx ON users (email);

CREATE TABLE user_roles
(
    user_id       INTEGER          NOT NULL,
    role          VARCHAR(255),
    CONSTRAINT user_roles_idx UNIQUE (user_id, role),
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE freshen
(
    id INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    recorded_date TIMESTAMP DEFAULT now(),
    language      VARCHAR(255)      NOT NULL,
    level         VARCHAR(255)      NOT NULL,
    workplace     VARCHAR(255)      NOT NULL,
    user_id       INTEGER,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE freshen_goal
(
    freshen_id    INTEGER NOT NULL,
    goal          VARCHAR(255),
    FOREIGN KEY (freshen_id) REFERENCES freshen (id) ON DELETE CASCADE
);

CREATE TABLE resume
(
    id INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    title        VARCHAR(255)   NOT NULL,
    name         VARCHAR(255)   NOT NULL,
    age          VARCHAR(255)   NOT NULL,
    address      VARCHAR(255)   NOT NULL,
    salary       INTEGER        NOT NULL,
    work_before  VARCHAR(255)   NOT NULL,
    url          VARCHAR(255)   NOT NULL,
    skills       VARCHAR(255)   NOT NULL,
    release_date DATE           NOT NULL,
    freshen_id   INTEGER        NOT NULL,
    CONSTRAINT resume_idx UNIQUE (title, work_before),
    FOREIGN KEY (freshen_id) REFERENCES freshen (id) ON DELETE CASCADE
);

CREATE TABLE vote
(
    id INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    local_date    DATE             NOT NULL,
    resume_id     INTEGER          NOT NULL,
    user_id       INTEGER          NOT NULL,
    CONSTRAINT votes_idx UNIQUE (resume_id, user_id),
    FOREIGN KEY (resume_id) REFERENCES resume (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE rate
(
    id INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name          VARCHAR(255)     NOT NULL,
    value_rate    DOUBLE PRECISION NOT NULL,
    date_rate     DATE             NOT NULL,
    CONSTRAINT rate_idx UNIQUE (name)
);
